name: Python application

on:
  push:
     branches:
      - '**'
  workflow_call:
    secrets:
      CODACY_PROJECT_TOKEN:
        required: true
      EMAIL_HOST_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy: 
     matrix:
          pyversion: ['3.6.15', '3.8']
          postgresversion: ['postgres:10.8','postgres:12']
          

    services:
      postgres:
        image: ${{matrix.postgresversion}}
        env:
          POSTGRES_USER: decide
          POSTGRES_PASSWORD: decide
          POSTGRES_DB: decide
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{matrix.pyversion}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.pyversion}}
    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev
    - name: Install dependencies and config
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install codacy-coverage
        cp decide/local_settings.gactions.py decide/local_settings.py
    - name: Generate translation files
      run: |
        sudo apt-get install gettext
        django-admin compilemessages
    - name: Run tests
      run: |
        cd decide
        coverage run --branch --source=. ./manage.py test  --keepdb 
        coverage xml 
    - name: Codacy Coverage Reporter
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: decide/coverage.xml 
